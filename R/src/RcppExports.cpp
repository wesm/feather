// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "feather_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// metadataFeather
List metadataFeather(const std::string& path);
RcppExport SEXP feather_metadataFeather(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(metadataFeather(path));
    return rcpp_result_gen;
END_RCPP
}
// openFeather
List openFeather(const std::string& path);
RcppExport SEXP feather_openFeather(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(openFeather(path));
    return rcpp_result_gen;
END_RCPP
}
// closeFeather
void closeFeather(const List& feather);
RcppExport SEXP feather_closeFeather(SEXP featherSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type feather(featherSEXP);
    closeFeather(feather);
    return R_NilValue;
END_RCPP
}
// closeFeather
void closeFeather(const List& feather);
RcppExport SEXP feather_closeFeather(SEXP featherSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const List& >::type feather(featherSEXP);
    closeFeather(feather);
    return R_NilValue;
END_RCPP
}
// rowsFeather
double rowsFeather(const List& feather);
RcppExport SEXP feather_rowsFeather(SEXP featherSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type feather(featherSEXP);
    rcpp_result_gen = Rcpp::wrap(rowsFeather(feather));
    return rcpp_result_gen;
END_RCPP
}
// coldataFeather
List coldataFeather(const List& feather, const IntegerVector& indexes);
RcppExport SEXP feather_coldataFeather(SEXP featherSEXP, SEXP indexesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type feather(featherSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type indexes(indexesSEXP);
    rcpp_result_gen = Rcpp::wrap(coldataFeather(feather, indexes));
    return rcpp_result_gen;
END_RCPP
}
// writeFeather
void writeFeather(DataFrame df, const std::string& path);
RcppExport SEXP feather_writeFeather(SEXP dfSEXP, SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type df(dfSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type path(pathSEXP);
    writeFeather(df, path);
    return R_NilValue;
END_RCPP
}
